<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="11852" started-at="2019-07-30T05:36:01Z" finished-at="2019-07-30T05:36:12Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="11852" started-at="2019-07-30T05:36:01Z" finished-at="2019-07-30T05:36:12Z">
      <class name="com.mobiotics.BSL_API_TestCases.TC_001_Log_On_Operator_Portal">
        <test-method status="PASS" signature="getLogOnToPortal()[pri:1, instance:com.mobiotics.BSL_API_TestCases.TC_001_Log_On_Operator_Portal@5c5a1b69]" name="getLogOnToPortal" duration-ms="6718" started-at="2019-07-30T05:36:01Z" finished-at="2019-07-30T05:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLogOnToPortal -->
      </class> <!-- com.mobiotics.BSL_API_TestCases.TC_001_Log_On_Operator_Portal -->
      <class name="com.mobiotics.BSL_API_TestCases.TC_002_Send_Special_Comand">
        <test-method status="PASS" signature="sendSpecialCommand()[pri:2, instance:com.mobiotics.BSL_API_TestCases.TC_002_Send_Special_Comand@3701eaf6]" name="sendSpecialCommand" duration-ms="4929" started-at="2019-07-30T05:36:07Z" finished-at="2019-07-30T05:36:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendSpecialCommand -->
      </class> <!-- com.mobiotics.BSL_API_TestCases.TC_002_Send_Special_Comand -->
      <class name="com.mobiotics.BSL_API_TestCases.TC_003_Get_Available_Comercial_ProductFOrOperator">
        <test-method status="FAIL" signature="getAvailableComercialProduct()[pri:3, instance:com.mobiotics.BSL_API_TestCases.TC_003_Get_Available_Comercial_ProductFOrOperator@627551fb]" name="getAvailableComercialProduct" duration-ms="61" started-at="2019-07-30T05:36:12Z" finished-at="2019-07-30T05:36:12Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Header value cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Header value cannot be null
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56)
at io.restassured.internal.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.header(RequestSpecificationImpl.groovy:936)
at com.mobiotics.BSL_API_TestCases.TC_003_Get_Available_Comercial_ProductFOrOperator.getAvailableComercialProduct(TC_003_Get_Available_Comercial_ProductFOrOperator.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableComercialProduct -->
      </class> <!-- com.mobiotics.BSL_API_TestCases.TC_003_Get_Available_Comercial_ProductFOrOperator -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
